{"permuation and combination": {
	"prefix": "number",
	"body": [
	  "const int MAX=1e5+1;",
	  "int fact[MAX] = {1};",
	  "",
	  "int add(int a, int b)",
	  "{",
	  "    return (a % mod + b % mod) % mod;",
	  "}",
	  "",
	  "int sub(int a, int b)",
	  "{",
	  "    return (a % mod - b % mod + mod) % mod;",
	  "}",
	  "",
	  "int mul(int a, int b)",
	  "{",
	  "    return ((a % mod) * (b % mod)) % mod;",
	  "}",
	  "",
	  "int exp(int a, int b)",
	  "{",
	  "    int ans = 1;",
	  "    while (b)",
	  "    {",
	  "        if (b & 1)",
	  "            ans = (ans * a) % mod;",
	  "        a = (a * a) % mod;",
	  "        b >>= 1;",
	  "    }",
	  "    return ans;",
	  "}",
	  "",
	  "int inv(int b)",
	  "{",
	  "    return exp(b, mod - 2) % mod;",
	  "}",
	  "",
	  "int division(int a, int b)",
	  "{",
	  "    return ((a % mod) * (inv(b) % mod)) % mod;",
	  "}",
	  "",
	  "int nCr(int n, int r)",
	  "{",
	  "    if (r > n)",
	  "        return 0;",
	  "    return division(fact[n], mul(fact[r], fact[n - r]));",
	  "}",
	  "",
	  "int nPr(int n, int r)",
	  "{",
	  "    if (r > n)",
	  "        return 0;",
	  "    return division(fact[n], fact[n - r]);",
	  "}",
	  "",
	  "int gcd(int a, int b)",
	  "{",
	  "    if (a == 0)",
	  "        return b;",
	  "    return gcd(b % a, a);",
	  "}",
	  "",
	  "int lcm(int a, int b)",
	  "{",
	  "    return (a * b) / gcd(a, b);",
	  "}",
	  "",
	  "void pref()",
	  "{",
	  "    fact[0] = 1;",
	  "    for (int i = 1; i < MAX; i++)",
	  "    {",
	  "        fact[i] = mul(fact[i - 1], i);",
	  "    }",
	  "}"
	],
	"description": "permuation and combination"
  }
}